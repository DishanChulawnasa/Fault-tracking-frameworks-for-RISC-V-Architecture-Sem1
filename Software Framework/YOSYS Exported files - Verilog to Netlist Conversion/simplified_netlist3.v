/* Generated by Yosys 0.9 (git sha1 1979e0b) */

module FullAdder32bit(A, B, Cin, Cout, Sum);
  wire [31:0] _000_;
  wire [31:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire [31:0] _065_;
  wire [31:0] _066_;
  input [31:0] A;
  wire [31:0] AND1_out;
  wire [31:0] AND2_out;
  input [31:0] B;
  wire [31:0] Carry_out;
  input Cin;
  output Cout;
  output [31:0] Sum;
  wire [31:0] XOR_out;
  assign _000_ = A & B;
  assign _001_ = XOR_out & Cin;
  assign _002_ = XOR_out[1] & Carry_out[1];
  assign _003_ = XOR_out[2] & Carry_out[2];
  assign _004_ = XOR_out[3] & Carry_out[3];
  assign _005_ = XOR_out[4] & Carry_out[4];
  assign _006_ = XOR_out[5] & Carry_out[5];
  assign _007_ = XOR_out[6] & Carry_out[6];
  assign _008_ = XOR_out[7] & Carry_out[7];
  assign _009_ = XOR_out[8] & Carry_out[8];
  assign _010_ = XOR_out[9] & Carry_out[9];
  assign _011_ = XOR_out[10] & Carry_out[10];
  assign _012_ = XOR_out[11] & Carry_out[11];
  assign _013_ = XOR_out[12] & Carry_out[12];
  assign _014_ = XOR_out[13] & Carry_out[13];
  assign _015_ = XOR_out[14] & Carry_out[14];
  assign _016_ = XOR_out[15] & Carry_out[15];
  assign _017_ = XOR_out[16] & Carry_out[16];
  assign _018_ = XOR_out[17] & Carry_out[17];
  assign _019_ = XOR_out[18] & Carry_out[18];
  assign _020_ = XOR_out[19] & Carry_out[19];
  assign _021_ = XOR_out[20] & Carry_out[20];
  assign _022_ = XOR_out[21] & Carry_out[21];
  assign _023_ = XOR_out[22] & Carry_out[22];
  assign _024_ = XOR_out[23] & Carry_out[23];
  assign _025_ = XOR_out[24] & Carry_out[24];
  assign _026_ = XOR_out[25] & Carry_out[25];
  assign _027_ = XOR_out[26] & Carry_out[26];
  assign _028_ = XOR_out[27] & Carry_out[27];
  assign _029_ = XOR_out[28] & Carry_out[28];
  assign _030_ = XOR_out[29] & Carry_out[29];
  assign _031_ = XOR_out[30] & Carry_out[30];
  assign _032_ = XOR_out[31] & Carry_out[31];
  assign _033_ = AND1_out[0] | AND2_out[0];
  assign _034_ = AND1_out[1] | AND2_out[1];
  assign _035_ = AND1_out[2] | AND2_out[2];
  assign _036_ = AND1_out[3] | AND2_out[3];
  assign _037_ = AND1_out[4] | AND2_out[4];
  assign _038_ = AND1_out[5] | AND2_out[5];
  assign _039_ = AND1_out[6] | AND2_out[6];
  assign _040_ = AND1_out[7] | AND2_out[7];
  assign _041_ = AND1_out[8] | AND2_out[8];
  assign _042_ = AND1_out[9] | AND2_out[9];
  assign _043_ = AND1_out[10] | AND2_out[10];
  assign _044_ = AND1_out[11] | AND2_out[11];
  assign _045_ = AND1_out[12] | AND2_out[12];
  assign _046_ = AND1_out[13] | AND2_out[13];
  assign _047_ = AND1_out[14] | AND2_out[14];
  assign _048_ = AND1_out[15] | AND2_out[15];
  assign _049_ = AND1_out[16] | AND2_out[16];
  assign _050_ = AND1_out[17] | AND2_out[17];
  assign _051_ = AND1_out[18] | AND2_out[18];
  assign _052_ = AND1_out[19] | AND2_out[19];
  assign _053_ = AND1_out[20] | AND2_out[20];
  assign _054_ = AND1_out[21] | AND2_out[21];
  assign _055_ = AND1_out[22] | AND2_out[22];
  assign _056_ = AND1_out[23] | AND2_out[23];
  assign _057_ = AND1_out[24] | AND2_out[24];
  assign _058_ = AND1_out[25] | AND2_out[25];
  assign _059_ = AND1_out[26] | AND2_out[26];
  assign _060_ = AND1_out[27] | AND2_out[27];
  assign _061_ = AND1_out[28] | AND2_out[28];
  assign _062_ = AND1_out[29] | AND2_out[29];
  assign _063_ = AND1_out[30] | AND2_out[30];
  assign _064_ = AND1_out[31] | AND2_out[31];
  assign _065_ = A ^ B;
  assign _066_ = XOR_out ^ Carry_out;
  assign A[0] = 1'h0;
  assign A[2] = 1'h0;
  assign B[0] = 1'h0;
  assign B[1] = 1'h0;
  assign B[2] = 1'h0;
  assign XOR_out = _065_;
  assign AND1_out = _000_;
  assign AND2_out[0] = _001_[0];
  assign Carry_out[0] = Cin;
  assign Sum = _066_;
  assign Cout = _064_;
  assign Carry_out[1] = _033_;
  assign AND2_out[1] = _002_;
  assign Carry_out[2] = _034_;
  assign AND2_out[2] = _003_;
  assign Carry_out[3] = _035_;
  assign AND2_out[3] = _004_;
  assign Carry_out[4] = _036_;
  assign AND2_out[4] = _005_;
  assign Carry_out[5] = _037_;
  assign AND2_out[5] = _006_;
  assign Carry_out[6] = _038_;
  assign AND2_out[6] = _007_;
  assign Carry_out[7] = _039_;
  assign AND2_out[7] = _008_;
  assign Carry_out[8] = _040_;
  assign AND2_out[8] = _009_;
  assign Carry_out[9] = _041_;
  assign AND2_out[9] = _010_;
  assign Carry_out[10] = _042_;
  assign AND2_out[10] = _011_;
  assign Carry_out[11] = _043_;
  assign AND2_out[11] = _012_;
  assign Carry_out[12] = _044_;
  assign AND2_out[12] = _013_;
  assign Carry_out[13] = _045_;
  assign AND2_out[13] = _014_;
  assign Carry_out[14] = _046_;
  assign AND2_out[14] = _015_;
  assign Carry_out[15] = _047_;
  assign AND2_out[15] = _016_;
  assign Carry_out[16] = _048_;
  assign AND2_out[16] = _017_;
  assign Carry_out[17] = _049_;
  assign AND2_out[17] = _018_;
  assign Carry_out[18] = _050_;
  assign AND2_out[18] = _019_;
  assign Carry_out[19] = _051_;
  assign AND2_out[19] = _020_;
  assign Carry_out[20] = _052_;
  assign AND2_out[20] = _021_;
  assign Carry_out[21] = _053_;
  assign AND2_out[21] = _022_;
  assign Carry_out[22] = _054_;
  assign AND2_out[22] = _023_;
  assign Carry_out[23] = _055_;
  assign AND2_out[23] = _024_;
  assign Carry_out[24] = _056_;
  assign AND2_out[24] = _025_;
  assign Carry_out[25] = _057_;
  assign AND2_out[25] = _026_;
  assign Carry_out[26] = _058_;
  assign AND2_out[26] = _027_;
  assign Carry_out[27] = _059_;
  assign AND2_out[27] = _028_;
  assign Carry_out[28] = _060_;
  assign AND2_out[28] = _029_;
  assign Carry_out[29] = _061_;
  assign AND2_out[29] = _030_;
  assign Carry_out[30] = _062_;
  assign AND2_out[30] = _031_;
  assign Carry_out[31] = _063_;
  assign AND2_out[31] = _032_;
endmodule
