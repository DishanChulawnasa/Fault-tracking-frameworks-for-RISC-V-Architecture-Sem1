/* Generated by Yosys 0.9 (git sha1 1979e0b) */

module FullAdder32bit(\A[0] , \A[1] , \A[2] , \A[3] , \A[4] , \A[5] , \A[6] , \A[7] , \A[8] , \A[9] , \A[10] , \A[11] , \A[12] , \A[13] , \A[14] , \A[15] , \A[16] , \A[17] , \A[18] , \A[19] , \A[20] , \A[21] , \A[22] , \A[23] , \A[24] , \A[25] , \A[26] , \A[27] , \A[28] , \A[29] , \A[30] , \A[31] , \B[0] , \B[1] , \B[2] , \B[3] , \B[4] , \B[5] , \B[6] , \B[7] , \B[8] , \B[9] , \B[10] , \B[11] , \B[12] , \B[13] , \B[14] , \B[15] , \B[16] , \B[17] , \B[18] , \B[19] , \B[20] , \B[21] , \B[22] , \B[23] , \B[24] , \B[25] , \B[26] , \B[27] , \B[28] , \B[29] , \B[30] , \B[31] , Cin, Cout, \Sum[0] , \Sum[1] , \Sum[2] , \Sum[3] , \Sum[4] , \Sum[5] , \Sum[6] , \Sum[7] , \Sum[8] , \Sum[9] , \Sum[10] , \Sum[11] , \Sum[12] , \Sum[13] , \Sum[14] , \Sum[15] , \Sum[16] , \Sum[17] , \Sum[18] , \Sum[19] , \Sum[20] , \Sum[21] , \Sum[22] , \Sum[23] , \Sum[24] , \Sum[25] , \Sum[26] , \Sum[27] , \Sum[28] , \Sum[29] , \Sum[30] , \Sum[31] );
  wire \AND1_out[0] ;
  wire \AND1_out[10] ;
  wire \AND1_out[11] ;
  wire \AND1_out[12] ;
  wire \AND1_out[13] ;
  wire \AND1_out[14] ;
  wire \AND1_out[15] ;
  wire \AND1_out[16] ;
  wire \AND1_out[17] ;
  wire \AND1_out[18] ;
  wire \AND1_out[19] ;
  wire \AND1_out[1] ;
  wire \AND1_out[20] ;
  wire \AND1_out[21] ;
  wire \AND1_out[22] ;
  wire \AND1_out[23] ;
  wire \AND1_out[24] ;
  wire \AND1_out[25] ;
  wire \AND1_out[26] ;
  wire \AND1_out[27] ;
  wire \AND1_out[28] ;
  wire \AND1_out[29] ;
  wire \AND1_out[2] ;
  wire \AND1_out[30] ;
  wire \AND1_out[31] ;
  wire \AND1_out[3] ;
  wire \AND1_out[4] ;
  wire \AND1_out[5] ;
  wire \AND1_out[6] ;
  wire \AND1_out[7] ;
  wire \AND1_out[8] ;
  wire \AND1_out[9] ;
  wire \AND2_out[0] ;
  wire \AND2_out[10] ;
  wire \AND2_out[11] ;
  wire \AND2_out[12] ;
  wire \AND2_out[13] ;
  wire \AND2_out[14] ;
  wire \AND2_out[15] ;
  wire \AND2_out[16] ;
  wire \AND2_out[17] ;
  wire \AND2_out[18] ;
  wire \AND2_out[19] ;
  wire \AND2_out[1] ;
  wire \AND2_out[20] ;
  wire \AND2_out[21] ;
  wire \AND2_out[22] ;
  wire \AND2_out[23] ;
  wire \AND2_out[24] ;
  wire \AND2_out[25] ;
  wire \AND2_out[26] ;
  wire \AND2_out[27] ;
  wire \AND2_out[28] ;
  wire \AND2_out[29] ;
  wire \AND2_out[2] ;
  wire \AND2_out[30] ;
  wire \AND2_out[31] ;
  wire \AND2_out[3] ;
  wire \AND2_out[4] ;
  wire \AND2_out[5] ;
  wire \AND2_out[6] ;
  wire \AND2_out[7] ;
  wire \AND2_out[8] ;
  wire \AND2_out[9] ;
  input \A[0] ;
  input \A[10] ;
  input \A[11] ;
  input \A[12] ;
  input \A[13] ;
  input \A[14] ;
  input \A[15] ;
  input \A[16] ;
  input \A[17] ;
  input \A[18] ;
  input \A[19] ;
  input \A[1] ;
  input \A[20] ;
  input \A[21] ;
  input \A[22] ;
  input \A[23] ;
  input \A[24] ;
  input \A[25] ;
  input \A[26] ;
  input \A[27] ;
  input \A[28] ;
  input \A[29] ;
  input \A[2] ;
  input \A[30] ;
  input \A[31] ;
  input \A[3] ;
  input \A[4] ;
  input \A[5] ;
  input \A[6] ;
  input \A[7] ;
  input \A[8] ;
  input \A[9] ;
  input \B[0] ;
  input \B[10] ;
  input \B[11] ;
  input \B[12] ;
  input \B[13] ;
  input \B[14] ;
  input \B[15] ;
  input \B[16] ;
  input \B[17] ;
  input \B[18] ;
  input \B[19] ;
  input \B[1] ;
  input \B[20] ;
  input \B[21] ;
  input \B[22] ;
  input \B[23] ;
  input \B[24] ;
  input \B[25] ;
  input \B[26] ;
  input \B[27] ;
  input \B[28] ;
  input \B[29] ;
  input \B[2] ;
  input \B[30] ;
  input \B[31] ;
  input \B[3] ;
  input \B[4] ;
  input \B[5] ;
  input \B[6] ;
  input \B[7] ;
  input \B[8] ;
  input \B[9] ;
  wire \Carry_out[0] ;
  wire \Carry_out[10] ;
  wire \Carry_out[11] ;
  wire \Carry_out[12] ;
  wire \Carry_out[13] ;
  wire \Carry_out[14] ;
  wire \Carry_out[15] ;
  wire \Carry_out[16] ;
  wire \Carry_out[17] ;
  wire \Carry_out[18] ;
  wire \Carry_out[19] ;
  wire \Carry_out[1] ;
  wire \Carry_out[20] ;
  wire \Carry_out[21] ;
  wire \Carry_out[22] ;
  wire \Carry_out[23] ;
  wire \Carry_out[24] ;
  wire \Carry_out[25] ;
  wire \Carry_out[26] ;
  wire \Carry_out[27] ;
  wire \Carry_out[28] ;
  wire \Carry_out[29] ;
  wire \Carry_out[2] ;
  wire \Carry_out[30] ;
  wire \Carry_out[31] ;
  wire \Carry_out[3] ;
  wire \Carry_out[4] ;
  wire \Carry_out[5] ;
  wire \Carry_out[6] ;
  wire \Carry_out[7] ;
  wire \Carry_out[8] ;
  wire \Carry_out[9] ;
  input Cin;
  output Cout;
  output \Sum[0] ;
  output \Sum[10] ;
  output \Sum[11] ;
  output \Sum[12] ;
  output \Sum[13] ;
  output \Sum[14] ;
  output \Sum[15] ;
  output \Sum[16] ;
  output \Sum[17] ;
  output \Sum[18] ;
  output \Sum[19] ;
  output \Sum[1] ;
  output \Sum[20] ;
  output \Sum[21] ;
  output \Sum[22] ;
  output \Sum[23] ;
  output \Sum[24] ;
  output \Sum[25] ;
  output \Sum[26] ;
  output \Sum[27] ;
  output \Sum[28] ;
  output \Sum[29] ;
  output \Sum[2] ;
  output \Sum[30] ;
  output \Sum[31] ;
  output \Sum[3] ;
  output \Sum[4] ;
  output \Sum[5] ;
  output \Sum[6] ;
  output \Sum[7] ;
  output \Sum[8] ;
  output \Sum[9] ;
  wire \XOR_out[0] ;
  wire \XOR_out[10] ;
  wire \XOR_out[11] ;
  wire \XOR_out[12] ;
  wire \XOR_out[13] ;
  wire \XOR_out[14] ;
  wire \XOR_out[15] ;
  wire \XOR_out[16] ;
  wire \XOR_out[17] ;
  wire \XOR_out[18] ;
  wire \XOR_out[19] ;
  wire \XOR_out[1] ;
  wire \XOR_out[20] ;
  wire \XOR_out[21] ;
  wire \XOR_out[22] ;
  wire \XOR_out[23] ;
  wire \XOR_out[24] ;
  wire \XOR_out[25] ;
  wire \XOR_out[26] ;
  wire \XOR_out[27] ;
  wire \XOR_out[28] ;
  wire \XOR_out[29] ;
  wire \XOR_out[2] ;
  wire \XOR_out[30] ;
  wire \XOR_out[31] ;
  wire \XOR_out[3] ;
  wire \XOR_out[4] ;
  wire \XOR_out[5] ;
  wire \XOR_out[6] ;
  wire \XOR_out[7] ;
  wire \XOR_out[8] ;
  wire \XOR_out[9] ;
  assign \Sum[3]  = \A[3]  ^ \B[3] ;
  assign \XOR_out[4]  = \A[4]  ^ \B[4] ;
  assign \XOR_out[5]  = \A[5]  ^ \B[5] ;
  assign \XOR_out[6]  = \A[6]  ^ \B[6] ;
  assign \XOR_out[7]  = \A[7]  ^ \B[7] ;
  assign \XOR_out[8]  = \A[8]  ^ \B[8] ;
  assign \XOR_out[9]  = \A[9]  ^ \B[9] ;
  assign \XOR_out[10]  = \A[10]  ^ \B[10] ;
  assign \XOR_out[11]  = \A[11]  ^ \B[11] ;
  assign \XOR_out[12]  = \A[12]  ^ \B[12] ;
  assign \XOR_out[13]  = \A[13]  ^ \B[13] ;
  assign \XOR_out[14]  = \A[14]  ^ \B[14] ;
  assign \XOR_out[15]  = \A[15]  ^ \B[15] ;
  assign \XOR_out[16]  = \A[16]  ^ \B[16] ;
  assign \XOR_out[17]  = \A[17]  ^ \B[17] ;
  assign \XOR_out[18]  = \A[18]  ^ \B[18] ;
  assign \XOR_out[19]  = \A[19]  ^ \B[19] ;
  assign \XOR_out[20]  = \A[20]  ^ \B[20] ;
  assign \XOR_out[21]  = \A[21]  ^ \B[21] ;
  assign \XOR_out[22]  = \A[22]  ^ \B[22] ;
  assign \XOR_out[23]  = \A[23]  ^ \B[23] ;
  assign \XOR_out[24]  = \A[24]  ^ \B[24] ;
  assign \XOR_out[25]  = \A[25]  ^ \B[25] ;
  assign \XOR_out[26]  = \A[26]  ^ \B[26] ;
  assign \XOR_out[27]  = \A[27]  ^ \B[27] ;
  assign \XOR_out[28]  = \A[28]  ^ \B[28] ;
  assign \XOR_out[29]  = \A[29]  ^ \B[29] ;
  assign \XOR_out[30]  = \A[30]  ^ \B[30] ;
  assign \XOR_out[31]  = \A[31]  ^ \B[31] ;
  assign \Carry_out[4]  = \A[3]  & \B[3] ;
  assign \AND1_out[4]  = \A[4]  & \B[4] ;
  assign \AND1_out[5]  = \A[5]  & \B[5] ;
  assign \AND1_out[6]  = \A[6]  & \B[6] ;
  assign \AND1_out[7]  = \A[7]  & \B[7] ;
  assign \AND1_out[8]  = \A[8]  & \B[8] ;
  assign \AND1_out[9]  = \A[9]  & \B[9] ;
  assign \AND1_out[10]  = \A[10]  & \B[10] ;
  assign \AND1_out[11]  = \A[11]  & \B[11] ;
  assign \AND1_out[12]  = \A[12]  & \B[12] ;
  assign \AND1_out[13]  = \A[13]  & \B[13] ;
  assign \AND1_out[14]  = \A[14]  & \B[14] ;
  assign \AND1_out[15]  = \A[15]  & \B[15] ;
  assign \AND1_out[16]  = \A[16]  & \B[16] ;
  assign \AND1_out[17]  = \A[17]  & \B[17] ;
  assign \AND1_out[18]  = \A[18]  & \B[18] ;
  assign \AND1_out[19]  = \A[19]  & \B[19] ;
  assign \AND1_out[20]  = \A[20]  & \B[20] ;
  assign \AND1_out[21]  = \A[21]  & \B[21] ;
  assign \AND1_out[22]  = \A[22]  & \B[22] ;
  assign \AND1_out[23]  = \A[23]  & \B[23] ;
  assign \AND1_out[24]  = \A[24]  & \B[24] ;
  assign \AND1_out[25]  = \A[25]  & \B[25] ;
  assign \AND1_out[26]  = \A[26]  & \B[26] ;
  assign \AND1_out[27]  = \A[27]  & \B[27] ;
  assign \AND1_out[28]  = \A[28]  & \B[28] ;
  assign \AND1_out[29]  = \A[29]  & \B[29] ;
  assign \AND1_out[30]  = \A[30]  & \B[30] ;
  assign \AND1_out[31]  = \A[31]  & \B[31] ;
  assign \Sum[4]  = \XOR_out[4]  ^ \Carry_out[4] ;
  assign \Sum[5]  = \XOR_out[5]  ^ \Carry_out[5] ;
  assign \Sum[6]  = \XOR_out[6]  ^ \Carry_out[6] ;
  assign \Sum[7]  = \XOR_out[7]  ^ \Carry_out[7] ;
  assign \Sum[8]  = \XOR_out[8]  ^ \Carry_out[8] ;
  assign \Sum[9]  = \XOR_out[9]  ^ \Carry_out[9] ;
  assign \Sum[10]  = \XOR_out[10]  ^ \Carry_out[10] ;
  assign \Sum[11]  = \XOR_out[11]  ^ \Carry_out[11] ;
  assign \Sum[12]  = \XOR_out[12]  ^ \Carry_out[12] ;
  assign \Sum[13]  = \XOR_out[13]  ^ \Carry_out[13] ;
  assign \Sum[14]  = \XOR_out[14]  ^ \Carry_out[14] ;
  assign \Sum[15]  = \XOR_out[15]  ^ \Carry_out[15] ;
  assign \Sum[16]  = \XOR_out[16]  ^ \Carry_out[16] ;
  assign \Sum[17]  = \XOR_out[17]  ^ \Carry_out[17] ;
  assign \Sum[18]  = \XOR_out[18]  ^ \Carry_out[18] ;
  assign \Sum[19]  = \XOR_out[19]  ^ \Carry_out[19] ;
  assign \Sum[20]  = \XOR_out[20]  ^ \Carry_out[20] ;
  assign \Sum[21]  = \XOR_out[21]  ^ \Carry_out[21] ;
  assign \Sum[22]  = \XOR_out[22]  ^ \Carry_out[22] ;
  assign \Sum[23]  = \XOR_out[23]  ^ \Carry_out[23] ;
  assign \Sum[24]  = \XOR_out[24]  ^ \Carry_out[24] ;
  assign \Sum[25]  = \XOR_out[25]  ^ \Carry_out[25] ;
  assign \Sum[26]  = \XOR_out[26]  ^ \Carry_out[26] ;
  assign \Sum[27]  = \XOR_out[27]  ^ \Carry_out[27] ;
  assign \Sum[28]  = \XOR_out[28]  ^ \Carry_out[28] ;
  assign \Sum[29]  = \XOR_out[29]  ^ \Carry_out[29] ;
  assign \Sum[30]  = \XOR_out[30]  ^ \Carry_out[30] ;
  assign \Sum[31]  = \XOR_out[31]  ^ \Carry_out[31] ;
  assign Cout = \AND1_out[31]  | \AND2_out[31] ;
  assign \AND2_out[4]  = \XOR_out[4]  & \Carry_out[4] ;
  assign \Carry_out[5]  = \AND1_out[4]  | \AND2_out[4] ;
  assign \AND2_out[5]  = \XOR_out[5]  & \Carry_out[5] ;
  assign \Carry_out[6]  = \AND1_out[5]  | \AND2_out[5] ;
  assign \AND2_out[6]  = \XOR_out[6]  & \Carry_out[6] ;
  assign \Carry_out[7]  = \AND1_out[6]  | \AND2_out[6] ;
  assign \AND2_out[7]  = \XOR_out[7]  & \Carry_out[7] ;
  assign \Carry_out[8]  = \AND1_out[7]  | \AND2_out[7] ;
  assign \AND2_out[8]  = \XOR_out[8]  & \Carry_out[8] ;
  assign \Carry_out[9]  = \AND1_out[8]  | \AND2_out[8] ;
  assign \AND2_out[9]  = \XOR_out[9]  & \Carry_out[9] ;
  assign \Carry_out[10]  = \AND1_out[9]  | \AND2_out[9] ;
  assign \AND2_out[10]  = \XOR_out[10]  & \Carry_out[10] ;
  assign \Carry_out[11]  = \AND1_out[10]  | \AND2_out[10] ;
  assign \AND2_out[11]  = \XOR_out[11]  & \Carry_out[11] ;
  assign \Carry_out[12]  = \AND1_out[11]  | \AND2_out[11] ;
  assign \AND2_out[12]  = \XOR_out[12]  & \Carry_out[12] ;
  assign \Carry_out[13]  = \AND1_out[12]  | \AND2_out[12] ;
  assign \AND2_out[13]  = \XOR_out[13]  & \Carry_out[13] ;
  assign \Carry_out[14]  = \AND1_out[13]  | \AND2_out[13] ;
  assign \AND2_out[14]  = \XOR_out[14]  & \Carry_out[14] ;
  assign \Carry_out[15]  = \AND1_out[14]  | \AND2_out[14] ;
  assign \AND2_out[15]  = \XOR_out[15]  & \Carry_out[15] ;
  assign \Carry_out[16]  = \AND1_out[15]  | \AND2_out[15] ;
  assign \AND2_out[16]  = \XOR_out[16]  & \Carry_out[16] ;
  assign \Carry_out[17]  = \AND1_out[16]  | \AND2_out[16] ;
  assign \AND2_out[17]  = \XOR_out[17]  & \Carry_out[17] ;
  assign \Carry_out[18]  = \AND1_out[17]  | \AND2_out[17] ;
  assign \AND2_out[18]  = \XOR_out[18]  & \Carry_out[18] ;
  assign \Carry_out[19]  = \AND1_out[18]  | \AND2_out[18] ;
  assign \AND2_out[19]  = \XOR_out[19]  & \Carry_out[19] ;
  assign \Carry_out[20]  = \AND1_out[19]  | \AND2_out[19] ;
  assign \AND2_out[20]  = \XOR_out[20]  & \Carry_out[20] ;
  assign \Carry_out[21]  = \AND1_out[20]  | \AND2_out[20] ;
  assign \AND2_out[21]  = \XOR_out[21]  & \Carry_out[21] ;
  assign \Carry_out[22]  = \AND1_out[21]  | \AND2_out[21] ;
  assign \AND2_out[22]  = \XOR_out[22]  & \Carry_out[22] ;
  assign \Carry_out[23]  = \AND1_out[22]  | \AND2_out[22] ;
  assign \AND2_out[23]  = \XOR_out[23]  & \Carry_out[23] ;
  assign \Carry_out[24]  = \AND1_out[23]  | \AND2_out[23] ;
  assign \AND2_out[24]  = \XOR_out[24]  & \Carry_out[24] ;
  assign \Carry_out[25]  = \AND1_out[24]  | \AND2_out[24] ;
  assign \AND2_out[25]  = \XOR_out[25]  & \Carry_out[25] ;
  assign \Carry_out[26]  = \AND1_out[25]  | \AND2_out[25] ;
  assign \AND2_out[26]  = \XOR_out[26]  & \Carry_out[26] ;
  assign \Carry_out[27]  = \AND1_out[26]  | \AND2_out[26] ;
  assign \AND2_out[27]  = \XOR_out[27]  & \Carry_out[27] ;
  assign \Carry_out[28]  = \AND1_out[27]  | \AND2_out[27] ;
  assign \AND2_out[28]  = \XOR_out[28]  & \Carry_out[28] ;
  assign \Carry_out[29]  = \AND1_out[28]  | \AND2_out[28] ;
  assign \AND2_out[29]  = \XOR_out[29]  & \Carry_out[29] ;
  assign \Carry_out[30]  = \AND1_out[29]  | \AND2_out[29] ;
  assign \AND2_out[30]  = \XOR_out[30]  & \Carry_out[30] ;
  assign \Carry_out[31]  = \AND1_out[30]  | \AND2_out[30] ;
  assign \AND2_out[31]  = \XOR_out[31]  & \Carry_out[31] ;
  assign \Carry_out[3]  = 1'h0;
  assign \Carry_out[2]  = 1'h0;
  assign \Carry_out[1]  = 1'h0;
  assign \Carry_out[0]  = Cin;
  assign \AND2_out[3]  = 1'h0;
  assign \AND2_out[2]  = 1'h0;
  assign \AND2_out[1]  = 1'h0;
  assign \AND2_out[0]  = 1'h0;
  assign \AND1_out[3]  = \Carry_out[4] ;
  assign \AND1_out[2]  = 1'h0;
  assign \AND1_out[1]  = 1'h0;
  assign \AND1_out[0]  = 1'h0;
  assign \XOR_out[3]  = \Sum[3] ;
  assign \XOR_out[2]  = 1'h0;
  assign \XOR_out[1]  = \A[1] ;
  assign \XOR_out[0]  = 1'h0;
  assign \Sum[2]  = 1'h0;
  assign \Sum[1]  = \A[1] ;
  assign \Sum[0]  = Cin;
  assign \B[2]  = 1'h0;
  assign \B[1]  = 1'h0;
  assign \B[0]  = 1'h0;
  assign \A[2]  = 1'h0;
  assign \A[0]  = 1'h0;
endmodule
